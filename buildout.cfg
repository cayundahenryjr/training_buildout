[buildout]
# we go bleeding edge for now
# fix this to a 5.0.1 release as soon as available
extends =
    https://raw.githubusercontent.com/plone/buildout.coredev/5.0/versions.cfg
    https://raw.githubusercontent.com/plone/buildout.coredev/5.0/sources.cfg
    https://raw.githubusercontent.com/plone/buildout.coredev/5.0/checkouts.cfg

# We add our own versions
    versions.cfg

versions = versions

extensions = mr.developer
# Tell mr.developer to ask before updating a checkout.
always-checkout = true
show-picked-versions = true
sources = sources

# Put checkouts in src-mrd. We keep our own package in src
sources-dir = src-mrd

# The directory this buildout is in. Modified when using vagrant.
buildout_dir = ${buildout:directory}

# We want to checkouts these eggs directly from github
auto-checkout +=
    ploneconf.site_sneak
#    starzel.votable_behavior
#    ploneconf.site
# For the JavaScript training - uncomment if you're doing the JavaScript Training
#    mockup-minimalpattern
#    example.plone5resources
#    mockup

parts =
    checkversions
    codeintel
    instance
    mrbob
    packages
    robot
    test
    zopepy

eggs =
    Plone
    Pillow
    Products.CMFPlone

# development tools
    z3c.jbot
    plone.api
    plone.reload
    Products.PDBDebugMode
    plone.app.debugtoolbar
    Products.PrintingMailHost

# TTW Forms (based on Archetypes)
    Products.PloneFormGen

# The addon we develop in the training
#    ploneconf.site

# Voting on content
#    starzel.votable_behavior

# For the JavaScript training - uncomment if you're doing the JavaScript Training
#    mockup-minimalpattern
#    example.plone5resources
#    mockup

zcml =

test-eggs +=
#    ploneconf.site [test]

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
debug-mode = on
verbose-security = on
deprecation-warnings = on
eggs = ${buildout:eggs}
zcml = ${buildout:zcml}
file-storage = ${buildout:buildout_dir}/var/filestorage/Data.fs
blob-storage = ${buildout:buildout_dir}/var/blobstorage

[test]
recipe = zc.recipe.testrunner
eggs = ${buildout:test-eggs}
defaults = ['--exit-with-status', '--auto-color', '--auto-progress']

[robot]
recipe = zc.recipe.egg
eggs =
    ${buildout:test-eggs}
    Pillow
    plone.app.robotframework[ride,reload,debug]

[packages]
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}
location = ${buildout:buildout_dir}/packages

[codeintel]
recipe = corneti.recipes.codeintel
eggs = ${buildout:eggs}

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/ploneconf.site/src/
pep3101 = False
imports = True
debug-statements = True
prefer-single-quotes = True
utf8-header = True
deprecated-aliases = True

[checkversions]
recipe = zc.recipe.egg
eggs = z3c.checkversions [buildout]

[zopepy]
recipe = zc.recipe.egg
eggs = ${buildout:eggs}
interpreter = zopepy
scripts =
    zopepy
    plone-generate-gruntfile
    plone-compile-resources

[mrbob]
recipe = zc.recipe.egg
eggs =
    mr.bob
    bobtemplates.plone

[sources]
ploneconf.site = fs ploneconf.site path=src
# ploneconf.site = fs final full-path=src/ploneconf.site_sneak/chapters/final
starzel.votable_behavior = git https://github.com/collective/starzel.votable_behavior.git pushurl=git://github.com/collective/starzel.votable_behavior.git path=src

# This is no egg but folders each containing the egg of ploneconf.site for one chapter
ploneconf.site_sneak = git https://github.com/collective/ploneconf.site_sneak.git path=src egg=false branch=plone5

# Repositories for the JavaScript training
mockup-minimalpattern = git https://github.com/collective/mockup-minimalpattern.git pushurl=git@github.com:collective/mockup-minimalpattern.git path=src
example.plone5resources = git https://github.com/collective/example.plone5resources.git pushurl=git@github.com:collective/example.plone5resources.git path=src
mockup = git https://github.com/plone/mockup.git pushurl=git@github.com:plone/mockup.git path=src
